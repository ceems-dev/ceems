# Conifguration file for configure TSDB updater for CEEMS API server
---
# Web URL of the TSDB instance. 
# Basic auth is supported and can be set using http://alice:password@localhost:9090
# Other authentication methods like client TLS are **not** supported
# CEEMS API server is supposed to deployed in the same trusted zone as TSDB which
# avoids the necessity for auth
web_url: "http://localhost:9090"

# Purge data from TSDB based on cut_off_duration. Compute units that have total
# life time less than this value will be deleted from TSDB to reduce number of labels
cut_off_duration: 5m

# Define queries that are used to estimate aggregate metrics of each compute unit
# These queries will be passed to golang's text/template package to build them
# Available template variables
# - UUIDs -> "|" delimited UUIDs string, eg, 123|345|567
# - ScrapeInterval -> Scrape interval of TSDB in time.Duration format eg 15s, 1m
# - ScrapeIntervalMilli -> Scrape interval of TSDB in milli seconds eg 15000, 60000
# - EvaluationInterval -> Evaluation interval of TSDB in time.Duration format eg 15s, 1m
# - EvaluationIntervalMilli -> Evaluation interval of TSDB in milli seconds eg 15s, 1m
# - RateInterval -> Rate interval in time.Duration format. It is estimated based on Scrape interval as 4*scrape_interval
# - Range -> Duration of interval where aggregation is being made in time.Duration format
#
queries:
  # Avgerage CPU utilisation
  avg_cpu_usage: |
    avg_over_time(
      avg by (uuid) (
        (
          rate(ceems_slurm_job_cpu_user_seconds{uuid=~"{{.UUIDs}}"}[{{.RateInterval}}])
          +
          rate(ceems_slurm_job_cpu_system_seconds{uuid=~"{{.UUIDs}}"}[{{.RateInterval}}])
        )
        /
        ceems_slurm_job_cpus{uuid=~"{{.UUIDs}}"}
      )[{{.Range}}:]
    ) * 100

  # Avgerage CPU Memory utilisation
  avg_cpu_mem_usage: |
    avg_over_time(
      avg by (uuid) (
        ceems_slurm_job_memory_used_bytes{uuid=~"{{.UUIDs}}"}
        /
        ceems_slurm_job_memory_total_bytes{uuid=~"{{.UUIDs}}"}
      )[{{.Range}}:]
    ) * 100

  # Total CPU energy usage in kWh
  total_cpu_energy_usage_kwh: |
    sum_over_time(
      sum by (uuid) (
        unit:ceems_slurm_job_cpu_energy_usage:sum{uuid=~"{{.UUIDs}}"} * {{.ScrapeIntervalMilli}} / 3.6e9
      )[{{.Range}}:{{.ScrapeInterval}}]
    )

  # Total CPU emissions in gms
  total_cpu_emissions_gms: |
    sum_over_time(
      sum by (uuid) (
        label_replace(
          unit:ceems_slurm_job_cpu_energy_usage:sum{uuid=~"{{.UUIDs}}"} * {{.ScrapeIntervalMilli}} / 3.6e9,
          "common_label",
          "mock",
          "hostname",
          "(.*)"
        )
        * on (common_label) group_left ()
        label_replace(
          ceems_emissions_gCo2_kWh{provider="rte"},
          "common_label",
          "mock",
          "hostname",
          "(.*)"
        )
      )[{{.Range}}:{{.ScrapeInterval}}]
    )

  # Average GPU utilization
  avg_gpu_usage: |
    avg_over_time(
      avg by (uuid) (
        DCGM_FI_DEV_GPU_UTIL
        * on (gpuuuid) group_right ()
        ceems_slurm_job_gpu_index_flag{uuid=~"{{.UUIDs}}"}
      )[{{.Range}}:{{.ScrapeInterval}}]
    )

  # Average GPU memory utilization
  avg_gpu_mem_usage: |
    avg_over_time(
      avg by (uuid) (
        DCGM_FI_DEV_MEM_COPY_UTIL
        * on (gpuuuid) group_right ()
        ceems_slurm_job_gpu_index_flag{uuid=~"{{.UUIDs}}"}
      )[{{.Range}}:{{.ScrapeInterval}}]
    )

  # Total GPU energy usage in kWh
  total_gpu_energy_usage_kwh: |
    sum_over_time(
      sum by (uuid) (
        instance:DCGM_FI_DEV_POWER_USAGE:pue_avg * {{.ScrapeIntervalMilli}} / 3.6e9
        * on (gpuuuid) group_right()
        ceems_slurm_job_gpu_index_flag{uuid=~"{{.UUIDs}}"}
      )[{{.Range}}:{{.ScrapeInterval}}]
    )

  # Total GPU emissions in gms
  total_gpu_emissions_gms: |
    sum_over_time(
      sum by (uuid) (
        label_replace(
          instance:DCGM_FI_DEV_POWER_USAGE:pue_avg * {{.ScrapeIntervalMilli}} / 3.6e+09
          * on (gpuuuid) group_right ()
          ceems_slurm_job_gpu_index_flag{uuid=~"{{.UUIDs}}"},
          "common_label",
          "mock",
          "instance",
          "(.*)"
        )
        * on (common_label) group_left ()
        label_replace(
          ceems_emissions_gCo2_kWh{provider="rte"},
          "common_label",
          "mock",
          "instance",
          "(.*)"
        )
      )[{{.Range}}:{{.ScrapeInterval}}]
    )

# List of labels to delete from TSDB. These labels should be valid matchers for TSDB
# More information of delete API of Prometheus https://prometheus.io/docs/prometheus/latest/querying/api/#delete-series
# TSDB must be started with --web.enable-admin-api flag for this to work
labels_to_drop:
  - ceems_ipmi_dcmi_avg_watts
