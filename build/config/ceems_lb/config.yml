# CEEMS LB config file
---

# Load balancing strategy. Three possibilites
# - round-robin
# - least-connection
# - resource-based
# Round robin and least connection are classic strategies.
# Resource based works based on the query range in the TSDB query. The 
# query will be proxied to the backend that covers the query_range
strategy: resource-based

# Path to CEEMS API server DB. 
# The DB contains the information of user and projet units and LB will verify
# if user/project is the owner of the uuid under request to decide whether to
# proxy request to backend or not.
# db_path: /var/lib/ceems_api_server/ceems_api_server.db

# List of admin users. 
# Requests from users defined in this list will be passed through without 
# any additional checks. This allows admin users to be able to access 
# dashboards of _any_ user.
# admin_users: []

# Grafana configuration.
# Besides the admin_users defined statically in the config, LB is capable of
# synchronizing users from a given Grafana Team to add the users of this team
# to the admin users. The synchronization is done every 2 hours and thus, whenever
# a new user is added to Grafana Team, that user will have access to be able to
# access dashboards of all users by skipping additional checks
# grafana:
#
#   # URL at which Grafana is running. If Grafana and CEEMS LB are running on the 
#   # same host, use the localhost. Else use the public URL of Grafana instance
#   url: http://localhost:3000
#
#   # If Grafana is using self signed TLS, set this option to true to skip TLS
#   # certificate check
#   skip_tls_verify: false
#
#   # The ID of the Grafana team to fetch the users from. 
#   # IMPORTANT: The CEEMS LB service should have a GRAFANA_API_TOKEN environment
#   # variable set to be able to fetch members of this Grafana team.
#   # Operators can create a service account and create a API token with admin scope
#   # in this service accoount and use that token for CEEMS LB service.
#   admin_team_id: 1

# TLS is not supported for backends. CEEMS LB supports TLS and TLS terminates
# at the LB and requests are proxied to backends on HTTP. 
#
# LB and backend servers are meant to be in the same DMZ so that we do not need
# to encrypt communications. Backends however support basic auth and they can 
# be configured in URL with usual syntax.
backends:
  - url: "http://localhost:9090"
  
  # An example of configuring the basic auth username and password with backend
  # - url: "http://alice:password@localhost:9091"
