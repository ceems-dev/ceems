name: packaging
run-name: Packaging

on:
  workflow_call:

jobs:
  packaging:
    name: packaging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.x

      - name: Install nfpm
        run: go install github.com/goreleaser/nfpm/v2/cmd/nfpm@latest

      - name: Download go build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-go-artifacts

      - name: Get version
        id: vars
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" && "${GITHUB_REF_TYPE}" == "tag" ]]; then
            REF_NAME=$(echo "${GITHUB_REF_NAME//\//-}")
            CEEMS_VERSION=$(echo "${REF_NAME//v}")
            echo "version=${CEEMS_VERSION}" >> $GITHUB_OUTPUT
          else
            echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
          fi
          echo "goos=linux" >> $GITHUB_OUTPUT

      # Build RPM and DEB packages
      - name: Build deb and rpm packages
        run: |
          # # Replace any '/' with '-' for non tag workflows
          # export REF_NAME=$(echo "${GITHUB_REF_NAME//\//-}")
          # # Strip v from tag name, eg v0.1.0 -> 0.1.0
          # export CEEMS_VERSION=$(echo "${REF_NAME//v}")
          # export GOOS=linux

          # Ensure target directory exists
          mkdir -p .tarballs

          # Build packages
          # Use a simple for loop instead of matrix strategy as building packages
          # is a very rapid process and we pay more price by repeating all the steps
          # if using a matrix strategy
          for arch in amd64 arm64; do
            for packager in rpm deb; do
              for app in ceems_exporter ceems_api_server ceems_lb; do
                  GOARCH=${arch} nfpm pkg --config build/package/${app}/nfpm.yml --packager ${packager} --target .tarballs/${app}-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.goos }}-${arch}.${packager}
              done 
            done 
          done

      - name: Test deb packages
        run: |
          # Install all CEEMS components
          for app in ceems_exporter ceems_api_server ceems_lb; do
              GOARCH=amd64 sudo apt-get install ./.tarballs/${app}-${{ steps.vars.outputs.version }}-${{ steps.vars.outputs.goos }}-amd64.deb
          done 

          # Test systemd service of each CEEMS component
          for app in ceems_exporter ceems_api_server ceems_lb; do
              systemctl is-active --quiet "${app}.service" && echo "${app}" is running
          done 

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: .tarballs
          retention-days: 1
