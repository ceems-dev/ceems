name: images
run-name: Container images

on:
  workflow_call:
    inputs:
      registry:
        type: string
        description: Registry
      organization:
        type: string
        description: Organization
      registry_provider:
        type: string
        description: Registry Provider
    secrets:
      login:
        required: true
      password:
        required: true
      quay_api_token:
        required: true

jobs:
  images:
    name: images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get step vars
        id: vars
        env:
          REGISTRY_PROVIDER: ${{ inputs.registry_provider }}
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            echo "branch_name=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            echo "branch_name=$(echo $GITHUB_BASE_REF)" >> $GITHUB_OUTPUT
          else
            echo "branch_name=nightly" >> $GITHUB_OUTPUT
          fi

          # Repo name for container registries
          if [[ "${REGISTRY_PROVIDER}" == "dockerhub" ]]; then
            echo "repo_name=$(make docker-repo-name)" >> $GITHUB_OUTPUT
          else
            export DOCKER_REPO="$(echo quay.io/${GITHUB_REPOSITORY_OWNER} | tr -d '-')"
            echo "repo_name=$(make docker-repo-name)" >> $GITHUB_OUTPUT
          fi

      - name: Download go build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Setup build environment
        run: |
          docker version
          docker run --rm --privileged tonistiigi/binfmt:latest --install all

      - name: Build container images
        run: |
          chmod +x -R .build
          make docker DOCKER_IMAGE_TAG=${{ steps.vars.outputs.branch_name }} DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}
          docker images

      - name: Test container images
        run: |
          make test-docker DOCKER_IMAGE_TAG=${{ steps.vars.outputs.branch_name }} DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}

      - name: Publish image for current branch/tag
        if: github.ref == 'refs/heads/main' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
        run: |
          echo ${{ secrets.password }} | docker login -u ${{ secrets.login }} --password-stdin ${{ inputs.registry }}
          make docker-publish DOCKER_IMAGE_TAG=${{ steps.vars.outputs.branch_name }} DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}
          make docker-manifest DOCKER_IMAGE_TAG=${{ steps.vars.outputs.branch_name }} DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}

      - name: Publish image with latest tag
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        run: |
          echo ${{ secrets.password }} | docker login -u ${{ secrets.login }} --password-stdin ${{ inputs.registry }}
          make docker-tag-latest DOCKER_IMAGE_TAG=${{ steps.vars.outputs.branch_name }} DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}
          make docker-publish DOCKER_IMAGE_TAG=latest DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}
          make docker-manifest DOCKER_IMAGE_TAG=latest DOCKER_REPO=${{ inputs.registry }}/${{ inputs.organization }}

      - name: Push README to registry
        uses: christian-korneck/update-container-description-action@d36005551adeaba9698d8d67a296bd16fa91f8e8 # v1
        if: (github.ref == 'refs/heads/main' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))) && github.repository_owner == 'mahendrapaipuri' # Don't run this workflow on forks.
        # NOTE: We need to remove it once we trim down the README and move content to
        # dedicated docs. DockerHub complains about too many characters in README
        continue-on-error: true
        env:
          # For dockerhub registry
          DOCKER_USER: ${{ secrets.login }}
          DOCKER_PASS: ${{ secrets.password }}
          # For quay.io
          DOCKER_APIKEY: ${{ secrets.quay_api_token }}
        with:
          destination_container_repo: ${{ steps.vars.outputs.repo_name }}
          provider: ${{ inputs.registry_provider }}
          short_description: ${{ steps.vars.outputs.repo_name }}
          readme_file: 'README.md'
