# Conifguration file for configure SLURM resource manager for CEEMS API server
---
ceems_api_server:
  data:
    path: TO_REPLACE
    backup_path: TO_REPLACE
  admin:
    users:
      - grafana
clusters:
  - id: slurm-0
    manager: slurm
    updaters:
      - tsdb-0
    cli: 
      path: pkg/api/testdata

  - id: slurm-1
    manager: slurm
    updaters:
      - tsdb-0
    cli: 
      path: pkg/api/testdata

updaters:
  - id: tsdb-0
    updater: tsdb
    web:
      url: http://localhost:9090
    extra_config:
      cutoff_duration: 0s
      queries:
        # Avgerage CPU utilisation
        avg_cpu_usage: |
          avg_over_time(
            avg by (uuid) (
              (
                rate(ceems_compute_unit_cpu_user_seconds_total{uuid=~"{{.UUIDs}}"}[{{.RateInterval}}])
                +
                rate(ceems_compute_unit_cpu_system_seconds_total{uuid=~"{{.UUIDs}}"}[{{.RateInterval}}])
              )
              /
              ceems_compute_unit_cpus{uuid=~"{{.UUIDs}}"}
            )[{{.Range}}:]
          ) * 100

        # Avgerage CPU Memory utilisation
        avg_cpu_mem_usage: |
          avg_over_time(
            avg by (uuid) (
              ceems_compute_unit_memory_used_bytes{uuid=~"{{.UUIDs}}"}
              /
              ceems_compute_unit_memory_total_bytes{uuid=~"{{.UUIDs}}"}
            )[{{.Range}}:]
          ) * 100

        # Total CPU energy usage in kWh
        total_cpu_energy_usage_kwh: |
          sum_over_time(
            sum by (uuid) (
              unit:ceems_compute_unit_cpu_energy_usage:sum{uuid=~"{{.UUIDs}}"} * {{.ScrapeIntervalMilli}} / 3.6e9
            )[{{.Range}}:{{.ScrapeInterval}}]
          )

        # Total CPU emissions in gms
        total_cpu_emissions_gms: |
          sum_over_time(
            sum by (uuid) (
              label_replace(
                unit:ceems_compute_unit_cpu_energy_usage:sum{uuid=~"{{.UUIDs}}"} * {{.ScrapeIntervalMilli}} / 3.6e9,
                "common_label",
                "mock",
                "hostname",
                "(.*)"
              )
              * on (common_label) group_left ()
              label_replace(
                ceems_emissions_gCo2_kWh{provider="rte"},
                "common_label",
                "mock",
                "hostname",
                "(.*)"
              )
            )[{{.Range}}:{{.ScrapeInterval}}]
          )

        # Average GPU utilization
        avg_gpu_usage: |
          avg_over_time(
            avg by (uuid) (
              DCGM_FI_DEV_GPU_UTIL
              * on (gpuuuid) group_right ()
              ceems_compute_unit_gpu_index_flag{uuid=~"{{.UUIDs}}"}
            )[{{.Range}}:{{.ScrapeInterval}}]
          )

        # Average GPU memory utilization
        avg_gpu_mem_usage: |
          avg_over_time(
            avg by (uuid) (
              DCGM_FI_DEV_MEM_COPY_UTIL
              * on (gpuuuid) group_right ()
              ceems_compute_unit_gpu_index_flag{uuid=~"{{.UUIDs}}"}
            )[{{.Range}}:{{.ScrapeInterval}}]
          )

        # Total GPU energy usage in kWh
        total_gpu_energy_usage_kwh: |
          sum_over_time(
            sum by (uuid) (
              instance:DCGM_FI_DEV_POWER_USAGE:pue_avg * {{.ScrapeIntervalMilli}} / 3.6e9
              * on (gpuuuid) group_right()
              ceems_compute_unit_gpu_index_flag{uuid=~"{{.UUIDs}}"}
            )[{{.Range}}:{{.ScrapeInterval}}]
          )

        # Total GPU emissions in gms
        total_gpu_emissions_gms: |
          sum_over_time(
            sum by (uuid) (
              label_replace(
                instance:DCGM_FI_DEV_POWER_USAGE:pue_avg * {{.ScrapeIntervalMilli}} / 3.6e+09
                * on (gpuuuid) group_right ()
                ceems_compute_unit_gpu_index_flag{uuid=~"{{.UUIDs}}"},
                "common_label",
                "mock",
                "instance",
                "(.*)"
              )
              * on (common_label) group_left ()
              label_replace(
                ceems_emissions_gCo2_kWh{provider="rte"},
                "common_label",
                "mock",
                "instance",
                "(.*)"
              )
            )[{{.Range}}:{{.ScrapeInterval}}]
          )
