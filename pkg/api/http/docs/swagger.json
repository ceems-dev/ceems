{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "OpenAPI specification (OAS) for the CEEMS REST API.\n\nSee the Interactive Docs to try CEEMS API methods without writing code, and get\nthe complete schema of resources exposed by the API.\n\nIf basic auth is enabled, all the endpoints require authentication.\n\nAll the endpoints, except `health`, `swagger`, `debug` and `demo`,\nmust send a user-agent header.\n\nA demo instance of CEEMS API server is provided for the users to test. This\ninstance is running at `https://ceems-demo.myaddr.tools:7443` and it is the\ndefault server that will serve the requests originating from current OAS client.\n\nSome of the valid users for this demo instance are:\n- arnold\n- betty\n- edna\n- gazoo\n- wilma\n\nEvery request must contain a `X-Grafana-User` header with one of the usernames\nabove as the value to the header. This is how CEEMS API server recognise the user.\n\nSome of the valid projects for this demo instance are:\n- bedrock\n- cornerstone\n\nDemo instance have CORS enabled to allow cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and\naccessible to everyone, including any code on any site.\n\nTo test admin resources, users can use `admin` as `X-Grafana-User`.\n\nTimestamps must be specified in milliseconds, unless otherwise specified.",
        "title": "CEEMS API",
        "contact": {
            "name": "Mahendra Paipuri",
            "url": "https://github.com/mahendrapaipuri/ceems/issues",
            "email": "mahendra.paipuri@gmail.com"
        },
        "license": {
            "name": "GPL-3.0 license",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        },
        "version": "1.0",
        "x-logo": {
            "altText": "CEEMS logo",
            "url": "https://raw.githubusercontent.com/mahendrapaipuri/ceems/refs/heads/main/website/static/img/logo.png"
        }
    },
    "host": "ceems-demo.myaddr.tools:7443",
    "basePath": "/api/v1",
    "paths": {
        "/clusters/admin": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will list all the cluster IDs in the CEEMS DB. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThis will list all the cluster IDs in the DB. This is primarily\nused to verify the CEEMS load balancer's backend IDs that should match\nwith cluster IDs.\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clusters"
                ],
                "summary": "List clusters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Cluster"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/demo/{resource}": {
            "get": {
                "description": "This endpoint returns sample response for units and usage models. This\nendpoint do not require the setting of `X-Grafana-User` header as it\nonly returns mock data for each request. This can be used to introspect\nthe response models for different resources.\n\nThe endpoint requires a path parameter `resource` which takes either:\n- `units` which returns a mock units response\n- `usage` which returns a mock usage response.\n\nThe mock data is generated randomly for each request and there is\nno guarantee that the data has logical sense.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "demo"
                ],
                "summary": "Demo Units/Usage endpoints",
                "parameters": [
                    {
                        "enum": [
                            "units",
                            "usage"
                        ],
                        "type": "string",
                        "description": "Whether to return mock units or usage data",
                        "name": "resource",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Usage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will show details of the queried project of current user. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe details include list of users in that project. If current user\nattempts to query a project that they are not part of, empty response\nwill be returned\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Show project details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Project",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/projects/admin": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will show details of the queried project. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe user who is making the request must be in the list of admin users\nconfigured for the server.\n\nThe details include list of users in that project. If current user\nattempts to query a project that they are not part of, empty response\nwill be returned\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Admin endpoint to fetch project details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Project",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Project"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/stats/{mode}/admin": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This admin endpoint will return the quick stats of _queried_ cluster. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe user who is making the request must be in the list of admin users\nconfigured for the server.\n\nA path parameter `mode` is required to return the kind of usage statistics.\nCurrently, two modes of statistics are supported:\n- `current`: In this mode the usage between two time periods is returned\nbased on `from` and `to` query parameters.\n- `global`: In this mode the _total_ usage statistics are returned. For\ninstance, if the retention period of the DB is set to 2 years, usage\nstatistics of last 2 years will be returned.\n\nThe statistics include current number of active users, projects, jobs, _etc_.\n\nIf `to` query parameter is not provided, current time will be used. If `from`\nquery parameter is not used, a default query window of 24 hours will be used.\nIt means if `to` is provided, `from` will be calculated as `to` - 24hrs.\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Admin Stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "current",
                            "global"
                        ],
                        "type": "string",
                        "description": "Whether to get quick stats within a period or global",
                        "name": "mode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To timestamp",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Stat"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/units": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This user endpoint will fetch compute units of the current user. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nIf multiple query parameters are passed, for instance, `?uuid=\u003cuuid\u003e\u0026project=\u003cproject\u003e`,\nthe intersection of query parameters are used to fetch compute units rather than\nthe union. That means if the compute unit's `uuid` does not belong to the queried\nproject, null response will be returned.\n\nIn order to return the running compute units as well, use the query parameter `running`.\n\nIf `to` query parameter is not provided, current time will be used. If `from`\nquery parameter is not used, a default query window of 24 hours will be used.\nIt means if `to` is provided, `from` will be calculated as `to` - 24hrs. If query\nparameter `timezone` is provided, the unit's created, start and end time strings\nwill be presented in that time zone.\n\nTo limit the number of fields in the response, use `field` query parameter. By default, all\nfields will be included in the response if they are _non-empty_.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "User endpoint for fetching compute units",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Unit UUID",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Project",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to fetch running units",
                        "name": "running",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time zone in IANA format",
                        "name": "timezone",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Fields to return in response",
                        "name": "field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Unit"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/units/admin": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This admin endpoint will fetch compute units of _any_ user, compute unit and/or project. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe user who is making the request must be in the list of admin users\nconfigured for the server.\n\nIf multiple query parameters are passed, for instance, `?uuid=\u003cuuid\u003e\u0026user=\u003cuser\u003e`,\nthe intersection of query parameters are used to fetch compute units rather than\nthe union. That means if the compute unit's `uuid` does not belong to the queried\nuser, null response will be returned.\n\nIn order to return the running compute units as well, use the query parameter `running`.\n\nIf `to` query parameter is not provided, current time will be used. If `from`\nquery parameter is not used, a default query window of 24 hours will be used.\nIt means if `to` is provided, `from` will be calculated as `to` - 24hrs. If query\nparameter `timezone` is provided, the unit's created, start and end time strings\nwill be presented in that time zone.\n\nTo limit the number of fields in the response, use `field` query parameter. By default, all\nfields will be included in the response if they are _non-empty_.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Admin endpoint for fetching compute units.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Unit UUID",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Project",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "User name",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to fetch running units",
                        "name": "running",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time zone in IANA format",
                        "name": "timezone",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Fields to return in response",
                        "name": "field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Unit"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/units/verify": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will check if the current user is the owner of the\nqueried UUIDs. The current user is always identified by the header `X-Grafana-User` in\nthe request.\n\nA response of 200 means that the current user is the owner of the queried UUIDs.\nAny other response code should be treated as the current user not being the owner\nof the queried units.\n\nThe ownership check passes if any of the following conditions are `true`:\n- If the current user is the _direct_ owner of the compute unit.\n- If the current user belongs to the same account/project/namespace as\nthe compute unit. This means the users belonging to the same project can\naccess each others compute units.\n- If the current user has admin role\n\nThe above checks must pass for **all** the queried units.\nIf the check does not pass for at least one queried unit, a response 403 will be\nreturned.\n\nAny 500 response codes should be treated as failed check as well.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "units"
                ],
                "summary": "Verify unit ownership",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Unit UUID",
                        "name": "uuid",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/usage/{mode}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will return the usage statistics current user. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nA path parameter `mode` is required to return the kind of usage statistics.\nCurrently, two modes of statistics are supported:\n- `current`: In this mode the usage between two time periods is returned\nbased on `from` and `to` query parameters.\n- `global`: In this mode the _total_ usage statistics are returned. For\ninstance, if the retention period of the DB is set to 2 years, usage\nstatistics of last 2 years will be returned.\n\nThe statistics can be limited to certain projects by passing `project` query,\nparameter.\n\nIf `to` query parameter is not provided, current time will be used. If `from`\nquery parameter is not used, a default query window of 24 hours will be used.\nIt means if `to` is provided, `from` will be calculated as `to` - 24hrs.\n\nTo limit the number of fields in the response, use `field` query parameter. By default, all\nfields will be included in the response if they are _non-empty_.\n\nThe `current` usage mode can be slow query depending the requested\nwindow interval. This is mostly due to the fact that the CEEMS DB\nuses custom JSON types to store metric data and usage statistics\nneeds to aggregate metrics over these JSON types using custom aggregate\nfunctions which can be slow.\n\nTherefore the query results are cached for 15 min to avoid load on server.\nURL string is used as the cache key. Thus, the query parameters\n`from` and `to` are rounded to the nearest timestamp that are\nmultiple of 900 sec (15 min). The first query will make a DB query and\ncache results and subsequent queries, for a given user and same URL\nquery parameters, will return the same cached result until the cache\nis invalidated after 15 min.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usage"
                ],
                "summary": "Usage statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "current",
                            "global"
                        ],
                        "type": "string",
                        "description": "Whether to get usage stats within a period or global",
                        "name": "mode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Project",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Fields to return in response",
                        "name": "field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Usage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/usage/{mode}/admin": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This admin endpoint will return the usage statistics of _queried_ user. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe user who is making the request must be in the list of admin users\nconfigured for the server.\n\nA path parameter `mode` is required to return the kind of usage statistics.\nCurrently, two modes of statistics are supported:\n- `current`: In this mode the usage between two time periods is returned\nbased on `from` and `to` query parameters.\n- `global`: In this mode the _total_ usage statistics are returned. For\ninstance, if the retention period of the DB is set to 2 years, usage\nstatistics of last 2 years will be returned.\n\nThe statistics can be limited to certain projects by passing `project` query,\nparameter.\n\nIf `to` query parameter is not provided, current time will be used. If `from`\nquery parameter is not used, a default query window of 24 hours will be used.\nIt means if `to` is provided, `from` will be calculated as `to` - 24hrs.\n\nTo limit the number of fields in the response, use `field` query parameter. By default, all\nfields will be included in the response if they are _non-empty_.\n\nThe `current` usage mode can be slow query depending the requested\nwindow interval. This is mostly due to the fact that the CEEMS DB\nuses custom JSON types to store metric data and usage statistics\nneeds to aggregate metrics over these JSON types using custom aggregate\nfunctions which can be slow.\n\nTherefore the query results are cached for 15 min to avoid load on server.\nURL string is used as the cache key. Thus, the query parameters\n`from` and `to` are rounded to the nearest timestamp that are\nmultiple of 900 sec (15 min). The first query will make a DB query and\ncache results and subsequent queries, for a given user and same URL\nquery parameters, will return the same cached result until the cache\nis invalidated after 15 min.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "usage"
                ],
                "summary": "Admin Usage statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "enum": [
                            "current",
                            "global"
                        ],
                        "type": "string",
                        "description": "Whether to get usage stats within a period or global",
                        "name": "mode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Project",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Username",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "From timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "To timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Fields to return in response",
                        "name": "field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_Usage"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will show details of the current user. The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe details include list of projects that user is currently a part of.\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Show user details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        },
        "/users/admin": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "This endpoint will show details of the queried user(s). The\ncurrent user is always identified by the header `X-Grafana-User` in\nthe request.\n\nThe user who is making the request must be in the list of admin users\nconfigured for the server.\n\nWhen the query parameter `user` is empty, all users will be returned\nin the response.\n\nThe details include list of projects that user is currently a part of.\n\nWhen query parameter `role` is set to `admin`, only admin users will\nwill be returned. The `tags` values indicates the source of admin user.\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Admin endpoint for fetching user details of _any_ user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Current user name",
                        "name": "X-Grafana-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "User name",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Cluster ID",
                        "name": "cluster_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User role",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.Response-models_User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.Response-any": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {},
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.Response-models_Cluster": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Cluster"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.Response-models_Project": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Project"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.Response-models_Stat": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Stat"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.Response-models_Unit": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Unit"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.Response-models_Usage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Usage"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.Response-models_User": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "error": {
                    "type": "string",
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "errorType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/http.errorType"
                        }
                    ],
                    "x-nullable": true,
                    "x-omitempty": true
                },
                "status": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "http.errorType": {
            "type": "string",
            "enum": [
                "",
                "unauthorized",
                "forbidden",
                "timeout",
                "canceled",
                "execution",
                "bad_data",
                "internal",
                "unavailable",
                "not_found",
                "not_acceptable"
            ],
            "x-enum-varnames": [
                "errorNone",
                "errorUnauthorized",
                "errorForbidden",
                "errorTimeout",
                "errorCanceled",
                "errorExec",
                "errorBadData",
                "errorInternal",
                "errorUnavailable",
                "errorNotFound",
                "errorNotAcceptable"
            ]
        },
        "models.Cluster": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "manager": {
                    "type": "string"
                }
            }
        },
        "models.Project": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "description": "Identifier of the resource manager that owns project. It is used to differentiate multiple clusters of same resource manager.",
                    "type": "string",
                    "example": "slurm-0"
                },
                "name": {
                    "description": "Name of the project",
                    "type": "string",
                    "example": "prj1"
                },
                "resource_manager": {
                    "description": "Name of the resource manager that owns project. Eg slurm, openstack, kubernetes, etc",
                    "type": "string",
                    "example": "slurm"
                },
                "tags": {
                    "description": "List of meta data tags of the project",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "uid": {
                    "description": "Unique identifier of the project provided by cluster",
                    "type": "string",
                    "example": "1000"
                },
                "users": {
                    "description": "List of users of the project",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "usr1",
                        "usr2"
                    ]
                }
            }
        },
        "models.Stat": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "description": "Identifier of the resource manager that owns compute unit. It is used to differentiate multiple clusters of same resource manager.",
                    "type": "string",
                    "example": "slurm-0"
                },
                "num_active_units": {
                    "description": "Number of active units that are in running state",
                    "type": "integer",
                    "example": 800
                },
                "num_inactive_units": {
                    "description": "Number of inactive units that are in terminated/cancelled/error state",
                    "type": "integer",
                    "example": 200
                },
                "num_projects": {
                    "description": "Number of projects",
                    "type": "integer",
                    "example": 200
                },
                "num_units": {
                    "description": "Number of active and terminated units",
                    "type": "integer",
                    "example": 1000
                },
                "num_users": {
                    "description": "Number of users",
                    "type": "integer",
                    "example": 500
                },
                "resource_manager": {
                    "description": "Name of the resource manager that owns project. Eg slurm, openstack, kubernetes, etc",
                    "type": "string",
                    "example": "slurm"
                }
            }
        },
        "models.Unit": {
            "type": "object",
            "properties": {
                "allocation": {
                    "description": "Allocation map of unit. Only string and int64 values are supported in map",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "cpus": 1,
                        "gpus": 1,
                        "mem": 10
                    }
                },
                "avg_cpu_mem_usage": {
                    "description": "Average CPU memory usage(s) during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 45.26
                    }
                },
                "avg_cpu_usage": {
                    "description": "Average CPU usage(s) during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 70.12
                    }
                },
                "avg_gpu_mem_usage": {
                    "description": "Average GPU memory usage(s) during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 45.26
                    }
                },
                "avg_gpu_usage": {
                    "description": "Average GPU usage(s) during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 70.12
                    }
                },
                "cluster_id": {
                    "description": "Identifier of the resource manager that owns compute unit. It is used to differentiate multiple clusters of same resource manager.",
                    "type": "string",
                    "example": "slurm-0"
                },
                "created_at": {
                    "description": "Creation time",
                    "type": "string",
                    "example": "2023-02-21T15:48:20+0100"
                },
                "created_at_ts": {
                    "description": "Creation timestamp",
                    "type": "integer",
                    "example": 1676990900000
                },
                "elapsed": {
                    "description": "Human readable total elapsed time string",
                    "type": "string",
                    "example": "2-00:10:20"
                },
                "ended_at": {
                    "description": "End time",
                    "type": "string",
                    "example": "Unknown"
                },
                "ended_at_ts": {
                    "description": "End timestamp",
                    "type": "integer",
                    "example": 0
                },
                "groupname": {
                    "description": "User group",
                    "type": "string",
                    "example": "grp1"
                },
                "name": {
                    "description": "Name of compute unit",
                    "type": "string",
                    "example": "my-slurm-job"
                },
                "project": {
                    "description": "Account in batch systems, Tenant in Openstack, Namespace in k8s",
                    "type": "string",
                    "example": "prj1"
                },
                "resource_manager": {
                    "description": "Name of the resource manager that owns compute unit. Eg slurm, openstack, kubernetes, etc",
                    "type": "string",
                    "example": "slurm"
                },
                "started_at": {
                    "description": "Start time",
                    "type": "string",
                    "example": "2023-02-21T15:49:06+0100"
                },
                "started_at_ts": {
                    "description": "Start timestamp",
                    "type": "integer",
                    "example": 1676990946000
                },
                "state": {
                    "description": "Current state of unit",
                    "type": "string",
                    "example": "RUNNING"
                },
                "tags": {
                    "description": "A map to store generic info. String and int64 are valid value types of map",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "gid": "1000",
                        "uid": "1000",
                        "workdir": "/home/user"
                    }
                },
                "total_cpu_emissions_gms": {
                    "description": "Total CPU emissions from source(s) in grams during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "emaps_total": 3.09,
                        "owid_total": 5.22
                    }
                },
                "total_cpu_energy_usage_kwh": {
                    "description": "Total CPU energy usage(s) in kWh during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "total": 0.73
                    }
                },
                "total_egress_stats": {
                    "description": "Total Outgress statistics of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 454342323,
                        "packets_total": 23232323
                    }
                },
                "total_gpu_emissions_gms": {
                    "description": "Total GPU emissions from source(s) in grams during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "emaps_total": 12.09,
                        "owid_total": 15.22
                    }
                },
                "total_gpu_energy_usage_kwh": {
                    "description": "Total GPU energy usage(s) in kWh during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "total": 5.39
                    }
                },
                "total_ingress_stats": {
                    "description": "Total Ingress statistics of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 8503405,
                        "packets_total": 43423
                    }
                },
                "total_io_read_stats": {
                    "description": "Total IO read statistics during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 245000000,
                        "requests_total": 49423
                    }
                },
                "total_io_write_stats": {
                    "description": "Total IO write statistics during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 12000000,
                        "requests_total": 13923
                    }
                },
                "total_time_seconds": {
                    "description": "Different types of times in seconds consumed by the unit. This map contains at minimum `walltime`, `alloc_cputime`, `alloc_cpumemtime`, `alloc_gputime` and `alloc_gpumem_time` keys.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "alloc_cpumemtime": 1000,
                        "alloc_cputime": 100,
                        "alloc_gpumemtime": 100,
                        "alloc_gputime": 100,
                        "walltime": 100
                    }
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "usr1"
                },
                "uuid": {
                    "description": "Unique identifier of unit. It can be Job ID for batch jobs, UUID for pods in k8s or VMs in Openstack",
                    "type": "string",
                    "example": "193048"
                }
            }
        },
        "models.Usage": {
            "type": "object",
            "properties": {
                "avg_cpu_mem_usage": {
                    "description": "Average CPU memory usage(s) during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 45.26
                    }
                },
                "avg_cpu_usage": {
                    "description": "Average CPU usage(s) during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 70.12
                    }
                },
                "avg_gpu_mem_usage": {
                    "description": "Average GPU memory usage(s) during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 45.26
                    }
                },
                "avg_gpu_usage": {
                    "description": "Average GPU usage(s) during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "global": 70.12
                    }
                },
                "cluster_id": {
                    "description": "Identifier of the resource manager that owns compute unit. It is used to differentiate multiple clusters of same resource manager.",
                    "type": "string",
                    "example": "slurm-0"
                },
                "groupname": {
                    "description": "User group",
                    "type": "string",
                    "example": "grp1"
                },
                "num_units": {
                    "description": "Number of consumed units",
                    "type": "integer",
                    "example": 145
                },
                "project": {
                    "description": "Account in batch systems, Tenant in Openstack, Namespace in k8s",
                    "type": "string",
                    "example": "prj1"
                },
                "resource_manager": {
                    "description": "Name of the resource manager that owns project. Eg slurm, openstack, kubernetes, etc",
                    "type": "string",
                    "example": "slurm"
                },
                "total_cpu_emissions_gms": {
                    "description": "Total CPU emissions from source(s) in grams during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "emaps_total": 3.09,
                        "owid_total": 5.22
                    }
                },
                "total_cpu_energy_usage_kwh": {
                    "description": "Total CPU energy usage(s) in kWh during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "total": 0.73
                    }
                },
                "total_egress_stats": {
                    "description": "Total Egress statistics of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 454342323,
                        "packets_total": 23232323
                    }
                },
                "total_gpu_emissions_gms": {
                    "description": "Total GPU emissions from source(s) in grams during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "emaps_total": 12.09,
                        "owid_total": 15.22
                    }
                },
                "total_gpu_energy_usage_kwh": {
                    "description": "Total GPU energy usage(s) in kWh during lifetime of project",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "total": 5.39
                    }
                },
                "total_ingress_stats": {
                    "description": "Total Ingress statistics of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 8503405,
                        "packets_total": 43423
                    }
                },
                "total_io_read_stats": {
                    "description": "Total IO read statistics during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 245000000,
                        "requests_total": 49423
                    }
                },
                "total_io_write_stats": {
                    "description": "Total IO write statistics during lifetime of unit",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "bytes_total": 12000000,
                        "requests_total": 13923
                    }
                },
                "total_time_seconds": {
                    "description": "Different times in seconds consumed by the unit. This map must contain `walltime`, `alloc_cputime`, `alloc_cpumemtime`, `alloc_gputime` and `alloc_gpumem_time` keys.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "example": {
                        "alloc_cpumemtime": 1000,
                        "alloc_cputime": 100,
                        "alloc_gpumemtime": 100,
                        "alloc_gputime": 100,
                        "walltime": 100
                    }
                },
                "username": {
                    "description": "Username",
                    "type": "string",
                    "example": "usr1"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "description": "Identifier of the resource manager that owns user. It is used to differentiate multiple clusters of same resource manager.",
                    "type": "string",
                    "example": "slurm-0"
                },
                "name": {
                    "description": "Name of the user",
                    "type": "string",
                    "example": "usr1"
                },
                "projects": {
                    "description": "List of projects of the user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "prj1",
                        "prj2"
                    ]
                },
                "resource_manager": {
                    "description": "Name of the resource manager that owns user. Eg slurm, openstack, kubernetes, etc",
                    "type": "string",
                    "example": "slurm"
                },
                "tags": {
                    "description": "List of meta data tags of the user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "tag1",
                        "tag2"
                    ]
                },
                "uid": {
                    "description": "Unique identifier of the user provided by cluster",
                    "type": "string",
                    "example": "1000"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "url": "https://mahendrapaipuri.github.io/ceems/"
    }
}