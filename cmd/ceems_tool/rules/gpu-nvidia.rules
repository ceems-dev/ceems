---
# Recording rules for NVIDIA GPUs scrape job {{.GPUJob}}.
#
# These rules map the GPU usage to the compute unit `uuid` which gives
# GPU metrics for each compute unit.
#
# We leverage these rules to include PUE (Power Usage Effectiveness) in the Power
# estimation as well.
#
groups:
  - name: compute-unit-gpu-rules-{{.GPUJob}}
    interval: {{.EvaluationInterval}}
    rules:
      # GPU Usage (%) by compute unit
      - record: uuid:ceems_gpu_usage:ratio
        expr: |2
            DCGM_FI_DEV_GPU_UTIL{job="{{.GPUJob}}"}
            * on (gpuuuid,gpuiid) group_right ()
            ceems_compute_unit_gpu_index_flag{job="{{.Job}}"}

      # GPU Memory Usage (%) by compute unit
      - record: uuid:ceems_gpu_memory_usage:ratio
        expr: |2
          (
              DCGM_FI_DEV_FB_USED{job="{{.GPUJob}}"} * 100
            /
              (DCGM_FI_DEV_FB_USED{job="{{.GPUJob}}"} + DCGM_FI_DEV_FB_FREE{job="{{.GPUJob}}"})
          )
          * on (gpuuuid,gpuiid) group_right ()
          ceems_compute_unit_gpu_index_flag{job="{{.Job}}"}
      
      # Total power (Watts) consumed by the GPU by accounting Power Usage Effectiveness (PUE) value.
      - record: dev:DCGM_FI_DEV_POWER_USAGE_INSTANT:pue
        expr: {{.PUE}} * DCGM_FI_DEV_POWER_USAGE_INSTANT{job="{{.GPUJob}}"}

      - record: uuid:ceems_gpu_power_watts:pue
        expr: |2
          dev:DCGM_FI_DEV_POWER_USAGE_INSTANT:pue{job="{{.GPUJob}}"}
          * on (gpuuuid,gpuiid) group_right()
          ceems_compute_unit_gpu_index_flag{job="{{.Job}}"}
          
{{- $numproviders := len .Providers -}}
{{- if gt $numproviders 0 }}
{{ range $i, $v := .Providers }}
      # Total equivalent emissions rate (g/s) from GPU due to the power consumed by the compute unit's GPUs.
      # The equivalent emissions are estimated using emission factor from {{$v}} for country
      # {{$.CountryCode}}
      - record: uuid:ceems_gpu_emissions_g_s:pue
        expr: |2
          label_replace(
              dev:DCGM_FI_DEV_POWER_USAGE_INSTANT:pue{job="{{$.GPUJob}}"} / 3.6e+06
            * on (gpuuuid,gpuiid) group_right ()
              ceems_compute_unit_gpu_index_flag{job="{{$.Job}}"},
              "provider",
              "{{$v}}",
              "instance",
              "(.*)"
            )
          * on (provider) group_left ()
            label_replace(
              ceems_emissions_gCo2_kWh{country_code="{{$.CountryCode}}",provider="{{$v}}"},
              "common_label",
              "mock",
              "instance",
              "(.*)"
            ) 
{{ end }}
{{- else }}
{{- if gt $.EmissionFactor.Value 0.0 }}

      # Total equivalent emissions rate (g/s) due to the power consumed by the compute unit's GPUs.
      # The equivalent emissions are estimated using static emission factor from OWID for country
      # {{$.CountryCode}}
      - record: uuid:ceems_gpu_emissions_g_s:pue
        expr: |2
          label_replace(
              dev:DCGM_FI_DEV_POWER_USAGE_INSTANT:pue{job="{{$.GPUJob}}"} / 3.6e+06
            * on (gpuuuid,gpuiid) group_right ()
              ceems_compute_unit_gpu_index_flag{job="{{$.Job}}"},
              "provider",
              "{{$.EmissionFactor.Provider}}",
              "instance",
              "(.*)"
            )
          * {{$.EmissionFactor.Value}}
{{- end }}
{{- end }}

      # Profiling metrics
{{ range $i, $v := .NVProfSeries }}
{{- $stringname := printf "%s" $v -}}
{{- $splitname := Split $stringname "DCGM_FI_PROF_" -}}
{{- $name := index $splitname 1 -}}
{{- $namelower := $name | ToLower }}
{{- $label := printf "uuid:ceems_gpu_%s:ratio" $namelower }}
      - record: {{ $label }}
        expr: |2
          {{$v}}{job="{{$.GPUJob}}"} * 100
          * on (gpuuuid,gpuiid) group_right ()
          ceems_compute_unit_gpu_index_flag{job="{{$.Job}}"}
{{ end }}

  # The following recording rules estimate the average GPU, GPU memory usages and
  # total GPU power and its equivalent emissions aggregared for all hosts 
  # per Prometheus job.
  # 
  - name: host-agg-gpu-rules-{{.GPUJob}}
    interval: {{.RateInterval}}
    rules:
      # Average GPU Usage (%) for all hosts aggregated per Prometheus job
      - record: job:ceems_gpu_usage:avg
        expr: avg by (job) (DCGM_FI_DEV_GPU_UTIL{job="{{.GPUJob}}"})

      # Average GPU memory usage (%) for all hosts aggregated per Prometheus job
      - record: job:ceems_gpu_memory_usage:avg_ratio
        expr: |2
          avg by (job) (
            (
                DCGM_FI_DEV_FB_USED{job="{{.GPUJob}}"} * 100
              /
                (DCGM_FI_DEV_FB_USED{job="{{.GPUJob}}"} + DCGM_FI_DEV_FB_FREE{job="{{.GPUJob}}"})
            )
          )

      # Total power usage (Watts) by GPUs on all hosts aggregated per Prometheus job
      - record: job:ceems_gpu_power_watts:pue
        expr: sum by (job)({{.PUE}} * DCGM_FI_DEV_POWER_USAGE_INSTANT{job="{{.GPUJob}}"})

{{- $numproviders := len .Providers -}}
{{- if gt $numproviders 0 }}

      # Total equivalent emissions rate (g/s) due to the power consumed by GPUs on all ths hosts
      # in a Prometheus job accounting PUE value.
      # The equivalent emissions are estimated for country {{$.CountryCode}}
      - record: job:ceems_gpu_emissions_g_s:pue
        expr: |2
          sum by (job, country_code, country, provider) (
            (
                job:ceems_gpu_power_watts:pue{job="{{$.GPUJob}}"} / 3.6e+06
              * on (job) group_right ()
                label_replace(ceems_emissions_gCo2_kWh, "job", "{{$.GPUJob}}", "instance", "(.*)")
            )
          )
{{- else }}
{{- if gt $.EmissionFactor.Value 0.0 }}

      # Total equivalent emissions rate (g/s) due to the power consumed by GPUs on all ths hosts
      # in a Prometheus job accounting PUE value.
      # The equivalent emissions are estimated using static emission factor from OWID for country
      # {{$.CountryCode}}
      - record: job:ceems_gpu_emissions_g_s:pue
        expr: |2
          label_replace(
            label_replace(
              {{$.EmissionFactor.Value}} * job:ceems_gpu_power_watts:pue{job="{{$.GPUJob}}"} / 3.6e+06,
              "provider",
              "{{$.EmissionFactor.Provider}}",
              "instance",
              "(.*)"
            ),
            "country_code",
            "{{$.CountryCode}}",
            "instance",
            "(.*)"
          )
{{- end }}
{{- end }}
